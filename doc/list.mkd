Concepts
--------
`Allocator`
  : defined by INCITS ISO IEC 14882 2012

`AllocatorDelegate`
  : backs a `delegating_allocator`
  : mirrors `Allocator` methods, accepting `Allocator` as first parameter

Allocators
----------
`delegated_allocator`
  : decorates an `Allocator`
  : shares ownership of an `AllocatorDelegate`
  : forwards method calls to `AllocatorDelegate`, passing decorated `Allocator`

`auto_allocator`
  : allocates memory from a growable pool

        template <typename A>
        using auto_allocator = delegated_allocator<A, auto_allocator_delegate>;

`finite_allocator`
  : allocates memory from a fixed-size pool

        template <typename A>
        using finite_allocator = delegated_allocator<A, finite_allocator_delegate>;

`shared_allocator`
  : shares ownership of a decorated `Allocator`

Delegates
---------
`auto_allocator_delegate`
  : allocates memory from a growable pool
  : grows pool using parameter `Allocator`

`finite_allocator_delegate`
  : allocates memory from a fixed-size pool
  : maintains an internal heap
  : uses leading parameter `Allocator` only to determine object size

`counting_allocator_delegate`
  : counts calls to all `Allocator` methods
  : counts allocated and deallocate objects

`null_allocator_delegate`
  : simply passes all calls to leading `Allocator` parameter
  : useful as partial implementation of other delegates

<style>
    dd p:first-child { margin-top: 0 }
</style>
